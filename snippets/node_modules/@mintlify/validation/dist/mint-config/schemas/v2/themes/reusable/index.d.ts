export declare const standardConfigSchema: {
    $schema: import("zod").ZodDefault<import("zod").ZodOptional<import("zod").ZodString>>;
    name: import("zod").ZodString;
    description: import("zod").ZodOptional<import("zod").ZodString>;
    colors: import("zod").ZodObject<{
        primary: import("zod").ZodString;
        light: import("zod").ZodOptional<import("zod").ZodString>;
        dark: import("zod").ZodOptional<import("zod").ZodString>;
    }, "strict", import("zod").ZodTypeAny, {
        primary: string;
        light?: string | undefined;
        dark?: string | undefined;
    }, {
        primary: string;
        light?: string | undefined;
        dark?: string | undefined;
    }>;
    logo: import("zod").ZodOptional<import("zod").ZodUnion<[import("zod").ZodString, import("zod").ZodObject<{
        light: import("zod").ZodString;
        dark: import("zod").ZodString;
        href: import("zod").ZodOptional<import("zod").ZodString>;
    }, "strip", import("zod").ZodTypeAny, {
        light: string;
        dark: string;
        href?: string | undefined;
    }, {
        light: string;
        dark: string;
        href?: string | undefined;
    }>]>>;
    favicon: import("zod").ZodOptional<import("zod").ZodUnion<[import("zod").ZodString, import("zod").ZodObject<{
        light: import("zod").ZodString;
        dark: import("zod").ZodString;
    }, "strip", import("zod").ZodTypeAny, {
        light: string;
        dark: string;
    }, {
        light: string;
        dark: string;
    }>]>>;
    openapi: import("zod").ZodOptional<import("zod").ZodUnion<[import("zod").ZodEffects<import("zod").ZodString, string, string>, import("zod").ZodArray<import("zod").ZodEffects<import("zod").ZodString, string, string>, "many">]>>;
    api: import("zod").ZodOptional<import("zod").ZodObject<{
        playground: import("zod").ZodOptional<import("zod").ZodObject<{
            display: import("zod").ZodDefault<import("zod").ZodOptional<import("zod").ZodEnum<["interactive", "simple", "none"]>>>;
            proxy: import("zod").ZodDefault<import("zod").ZodOptional<import("zod").ZodBoolean>>;
        }, "strip", import("zod").ZodTypeAny, {
            display: "simple" | "none" | "interactive";
            proxy: boolean;
        }, {
            display?: "simple" | "none" | "interactive" | undefined;
            proxy?: boolean | undefined;
        }>>;
        examples: import("zod").ZodOptional<import("zod").ZodObject<{
            languages: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>;
        }, "strip", import("zod").ZodTypeAny, {
            languages?: string[] | undefined;
        }, {
            languages?: string[] | undefined;
        }>>;
        mdx: import("zod").ZodOptional<import("zod").ZodObject<{
            auth: import("zod").ZodOptional<import("zod").ZodEnum<["bearer", "basic", "key", "cobo"]>>;
            base: import("zod").ZodOptional<import("zod").ZodUnion<[import("zod").ZodString, import("zod").ZodArray<import("zod").ZodString, "many">]>>;
        }, "strip", import("zod").ZodTypeAny, {
            auth?: "key" | "bearer" | "basic" | "cobo" | undefined;
            base?: string | string[] | undefined;
        }, {
            auth?: "key" | "bearer" | "basic" | "cobo" | undefined;
            base?: string | string[] | undefined;
        }>>;
    }, "strip", import("zod").ZodTypeAny, {
        playground?: {
            display: "simple" | "none" | "interactive";
            proxy: boolean;
        } | undefined;
        examples?: {
            languages?: string[] | undefined;
        } | undefined;
        mdx?: {
            auth?: "key" | "bearer" | "basic" | "cobo" | undefined;
            base?: string | string[] | undefined;
        } | undefined;
    }, {
        playground?: {
            display?: "simple" | "none" | "interactive" | undefined;
            proxy?: boolean | undefined;
        } | undefined;
        examples?: {
            languages?: string[] | undefined;
        } | undefined;
        mdx?: {
            auth?: "key" | "bearer" | "basic" | "cobo" | undefined;
            base?: string | string[] | undefined;
        } | undefined;
    }>>;
    appearance: import("zod").ZodOptional<import("zod").ZodObject<{
        default: import("zod").ZodDefault<import("zod").ZodEnum<["system", "light", "dark"]>>;
        strict: import("zod").ZodDefault<import("zod").ZodBoolean>;
    }, "strip", import("zod").ZodTypeAny, {
        strict: boolean;
        default: "light" | "dark" | "system";
    }, {
        default?: "light" | "dark" | "system" | undefined;
        strict?: boolean | undefined;
    }>>;
    background: import("zod").ZodOptional<import("zod").ZodObject<{
        image: import("zod").ZodOptional<import("zod").ZodUnion<[import("zod").ZodString, import("zod").ZodObject<{
            light: import("zod").ZodString;
            dark: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            light: string;
            dark: string;
        }, {
            light: string;
            dark: string;
        }>]>>;
        decoration: import("zod").ZodOptional<import("zod").ZodEnum<["gradient", "grid", "windows"]>>;
        color: import("zod").ZodOptional<import("zod").ZodObject<{
            light: import("zod").ZodOptional<import("zod").ZodString>;
            dark: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strict", import("zod").ZodTypeAny, {
            light?: string | undefined;
            dark?: string | undefined;
        }, {
            light?: string | undefined;
            dark?: string | undefined;
        }>>;
    }, "strip", import("zod").ZodTypeAny, {
        image?: string | {
            light: string;
            dark: string;
        } | undefined;
        decoration?: "gradient" | "grid" | "windows" | undefined;
        color?: {
            light?: string | undefined;
            dark?: string | undefined;
        } | undefined;
    }, {
        image?: string | {
            light: string;
            dark: string;
        } | undefined;
        decoration?: "gradient" | "grid" | "windows" | undefined;
        color?: {
            light?: string | undefined;
            dark?: string | undefined;
        } | undefined;
    }>>;
    topbar: import("zod").ZodOptional<import("zod").ZodObject<{
        links: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodObject<{
            label: import("zod").ZodString;
            href: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            href: string;
            label: string;
        }, {
            href: string;
            label: string;
        }>, "many">>;
        primary: import("zod").ZodOptional<import("zod").ZodDiscriminatedUnion<"type", [import("zod").ZodObject<{
            type: import("zod").ZodLiteral<"button">;
            label: import("zod").ZodString;
            href: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            type: "button";
            href: string;
            label: string;
        }, {
            type: "button";
            href: string;
            label: string;
        }>, import("zod").ZodObject<{
            type: import("zod").ZodLiteral<"github">;
            href: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            type: "github";
            href: string;
        }, {
            type: "github";
            href: string;
        }>]>>;
    }, "strip", import("zod").ZodTypeAny, {
        links?: {
            href: string;
            label: string;
        }[] | undefined;
        primary?: {
            type: "button";
            href: string;
            label: string;
        } | {
            type: "github";
            href: string;
        } | undefined;
    }, {
        links?: {
            href: string;
            label: string;
        }[] | undefined;
        primary?: {
            type: "button";
            href: string;
            label: string;
        } | {
            type: "github";
            href: string;
        } | undefined;
    }>>;
    navigation: import("zod").ZodIntersection<import("zod").ZodUnion<[import("zod").ZodObject<{
        languages: import("zod").ZodArray<import("zod").ZodIntersection<import("zod").ZodObject<{
            language: import("zod").ZodEnum<["en", "cn", "es", "fr", "jp", "pt", "pt-BR", "de"]>;
            hidden: import("zod").ZodOptional<import("zod").ZodBoolean>;
        }, "strip", import("zod").ZodTypeAny, {
            language: "en" | "cn" | "es" | "fr" | "jp" | "pt" | "pt-BR" | "de";
            hidden?: boolean | undefined;
        }, {
            language: "en" | "cn" | "es" | "fr" | "jp" | "pt" | "pt-BR" | "de";
            hidden?: boolean | undefined;
        }>, import("zod").ZodUnion<[import("zod").ZodObject<{
            openapi: import("zod").ZodUnion<[import("zod").ZodEffects<import("zod").ZodString, string, string>, import("zod").ZodArray<import("zod").ZodEffects<import("zod").ZodString, string, string>, "many">]>;
        }, "strip", import("zod").ZodTypeAny, {
            openapi: (string | string[]) & (string | string[] | undefined);
        }, {
            openapi: (string | string[]) & (string | string[] | undefined);
        }>, import("zod").ZodObject<{
            href: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            href: string;
        }, {
            href: string;
        }>, import("zod").ZodLazy<import("zod").ZodObject<{
            versions: import("zod").ZodArray<import("zod").ZodType<any, import("zod").ZodTypeDef, any>, "many">;
        }, "strip", import("zod").ZodTypeAny, {
            versions: any[];
        }, {
            versions: any[];
        }>>, import("zod").ZodLazy<import("zod").ZodObject<{
            tabs: import("zod").ZodArray<import("zod").ZodType<any, import("zod").ZodTypeDef, any>, "many">;
        }, "strip", import("zod").ZodTypeAny, {
            tabs: any[];
        }, {
            tabs: any[];
        }>>, import("zod").ZodLazy<import("zod").ZodObject<{
            dropdowns: import("zod").ZodArray<import("zod").ZodType<any, import("zod").ZodTypeDef, any>, "many">;
        }, "strip", import("zod").ZodTypeAny, {
            dropdowns: any[];
        }, {
            dropdowns: any[];
        }>>, import("zod").ZodLazy<import("zod").ZodObject<{
            anchors: import("zod").ZodArray<import("zod").ZodType<any, import("zod").ZodTypeDef, any>, "many">;
        }, "strip", import("zod").ZodTypeAny, {
            anchors: any[];
        }, {
            anchors: any[];
        }>>, import("zod").ZodLazy<import("zod").ZodObject<{
            groups: import("zod").ZodArray<import("zod").ZodIntersection<import("zod").ZodObject<{
                group: import("zod").ZodString;
                icon: import("zod").ZodOptional<import("zod").ZodUnion<[import("zod").ZodEffects<import("zod").ZodString, string, string>, import("zod").ZodObject<{
                    style: import("zod").ZodOptional<import("zod").ZodEnum<["brands", "duotone", "light", "regular", "sharp-duotone-solid", "sharp-light", "sharp-regular", "sharp-solid", "sharp-thin", "solid", "thin"]>>;
                    name: import("zod").ZodEffects<import("zod").ZodString, string, string>;
                }, "strip", import("zod").ZodTypeAny, {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                }, {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                }>]>>;
                hidden: import("zod").ZodOptional<import("zod").ZodBoolean>;
                root: import("zod").ZodOptional<import("zod").ZodEffects<import("zod").ZodString, string, string>>;
            }, "strip", import("zod").ZodTypeAny, {
                group: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                root?: string | undefined;
            }, {
                group: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                root?: string | undefined;
            }>, import("zod").ZodUnion<[import("zod").ZodObject<{
                openapi: import("zod").ZodUnion<[import("zod").ZodEffects<import("zod").ZodString, string, string>, import("zod").ZodArray<import("zod").ZodEffects<import("zod").ZodString, string, string>, "many">]>;
            }, "strip", import("zod").ZodTypeAny, {
                openapi: (string | string[]) & (string | string[] | undefined);
            }, {
                openapi: (string | string[]) & (string | string[] | undefined);
            }>, import("zod").ZodLazy<import("zod").ZodObject<{
                pages: import("zod").ZodArray<import("zod").ZodType<any, import("zod").ZodTypeDef, any>, "many">;
            }, "strip", import("zod").ZodTypeAny, {
                pages: any[];
            }, {
                pages: any[];
            }>>]>>, "many">;
        }, "strip", import("zod").ZodTypeAny, {
            groups: ({
                group: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                root?: string | undefined;
            } & ({
                openapi: (string | string[]) & (string | string[] | undefined);
            } | {
                pages: any[];
            }))[];
        }, {
            groups: ({
                group: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                root?: string | undefined;
            } & ({
                openapi: (string | string[]) & (string | string[] | undefined);
            } | {
                pages: any[];
            }))[];
        }>>, import("zod").ZodLazy<import("zod").ZodObject<{
            pages: import("zod").ZodArray<import("zod").ZodType<any, import("zod").ZodTypeDef, any>, "many">;
        }, "strip", import("zod").ZodTypeAny, {
            pages: any[];
        }, {
            pages: any[];
        }>>]>>, "many">;
    }, "strip", import("zod").ZodTypeAny, {
        languages: ({
            language: "en" | "cn" | "es" | "fr" | "jp" | "pt" | "pt-BR" | "de";
            hidden?: boolean | undefined;
        } & ({
            openapi: (string | string[]) & (string | string[] | undefined);
        } | {
            href: string;
        } | {
            versions: any[];
        } | {
            tabs: any[];
        } | {
            dropdowns: any[];
        } | {
            anchors: any[];
        } | {
            groups: ({
                group: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                root?: string | undefined;
            } & ({
                openapi: (string | string[]) & (string | string[] | undefined);
            } | {
                pages: any[];
            }))[];
        } | {
            pages: any[];
        }))[];
    }, {
        languages: ({
            language: "en" | "cn" | "es" | "fr" | "jp" | "pt" | "pt-BR" | "de";
            hidden?: boolean | undefined;
        } & ({
            openapi: (string | string[]) & (string | string[] | undefined);
        } | {
            href: string;
        } | {
            versions: any[];
        } | {
            tabs: any[];
        } | {
            dropdowns: any[];
        } | {
            anchors: any[];
        } | {
            groups: ({
                group: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
                root?: string | undefined;
            } & ({
                openapi: (string | string[]) & (string | string[] | undefined);
            } | {
                pages: any[];
            }))[];
        } | {
            pages: any[];
        }))[];
    }>, import("zod").ZodObject<{
        versions: import("zod").ZodArray<import("zod").ZodType<any, import("zod").ZodTypeDef, any>, "many">;
    }, "strip", import("zod").ZodTypeAny, {
        versions: any[];
    }, {
        versions: any[];
    }>, import("zod").ZodObject<{
        tabs: import("zod").ZodArray<import("zod").ZodType<any, import("zod").ZodTypeDef, any>, "many">;
    }, "strip", import("zod").ZodTypeAny, {
        tabs: any[];
    }, {
        tabs: any[];
    }>, import("zod").ZodObject<{
        dropdowns: import("zod").ZodArray<import("zod").ZodType<any, import("zod").ZodTypeDef, any>, "many">;
    }, "strip", import("zod").ZodTypeAny, {
        dropdowns: any[];
    }, {
        dropdowns: any[];
    }>, import("zod").ZodObject<{
        anchors: import("zod").ZodArray<import("zod").ZodType<any, import("zod").ZodTypeDef, any>, "many">;
    }, "strip", import("zod").ZodTypeAny, {
        anchors: any[];
    }, {
        anchors: any[];
    }>, import("zod").ZodObject<{
        groups: import("zod").ZodArray<import("zod").ZodIntersection<import("zod").ZodObject<{
            group: import("zod").ZodString;
            icon: import("zod").ZodOptional<import("zod").ZodUnion<[import("zod").ZodEffects<import("zod").ZodString, string, string>, import("zod").ZodObject<{
                style: import("zod").ZodOptional<import("zod").ZodEnum<["brands", "duotone", "light", "regular", "sharp-duotone-solid", "sharp-light", "sharp-regular", "sharp-solid", "sharp-thin", "solid", "thin"]>>;
                name: import("zod").ZodEffects<import("zod").ZodString, string, string>;
            }, "strip", import("zod").ZodTypeAny, {
                name: string;
                style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
            }, {
                name: string;
                style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
            }>]>>;
            hidden: import("zod").ZodOptional<import("zod").ZodBoolean>;
            root: import("zod").ZodOptional<import("zod").ZodEffects<import("zod").ZodString, string, string>>;
        }, "strip", import("zod").ZodTypeAny, {
            group: string;
            icon?: string | {
                name: string;
                style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            root?: string | undefined;
        }, {
            group: string;
            icon?: string | {
                name: string;
                style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            root?: string | undefined;
        }>, import("zod").ZodUnion<[import("zod").ZodObject<{
            openapi: import("zod").ZodUnion<[import("zod").ZodEffects<import("zod").ZodString, string, string>, import("zod").ZodArray<import("zod").ZodEffects<import("zod").ZodString, string, string>, "many">]>;
        }, "strip", import("zod").ZodTypeAny, {
            openapi: (string | string[]) & (string | string[] | undefined);
        }, {
            openapi: (string | string[]) & (string | string[] | undefined);
        }>, import("zod").ZodLazy<import("zod").ZodObject<{
            pages: import("zod").ZodArray<import("zod").ZodType<any, import("zod").ZodTypeDef, any>, "many">;
        }, "strip", import("zod").ZodTypeAny, {
            pages: any[];
        }, {
            pages: any[];
        }>>]>>, "many">;
    }, "strip", import("zod").ZodTypeAny, {
        groups: ({
            group: string;
            icon?: string | {
                name: string;
                style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            root?: string | undefined;
        } & ({
            openapi: (string | string[]) & (string | string[] | undefined);
        } | {
            pages: any[];
        }))[];
    }, {
        groups: ({
            group: string;
            icon?: string | {
                name: string;
                style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
            } | undefined;
            hidden?: boolean | undefined;
            root?: string | undefined;
        } & ({
            openapi: (string | string[]) & (string | string[] | undefined);
        } | {
            pages: any[];
        }))[];
    }>, import("zod").ZodObject<{
        pages: import("zod").ZodArray<import("zod").ZodType<any, import("zod").ZodTypeDef, any>, "many">;
    }, "strip", import("zod").ZodTypeAny, {
        pages: any[];
    }, {
        pages: any[];
    }>]>, import("zod").ZodObject<{
        global: import("zod").ZodOptional<import("zod").ZodObject<{
            languages: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodIntersection<import("zod").ZodObject<{
                language: import("zod").ZodEnum<["en", "cn", "es", "fr", "jp", "pt", "pt-BR", "de"]>;
                hidden: import("zod").ZodOptional<import("zod").ZodBoolean>;
            }, "strip", import("zod").ZodTypeAny, {
                language: "en" | "cn" | "es" | "fr" | "jp" | "pt" | "pt-BR" | "de";
                hidden?: boolean | undefined;
            }, {
                language: "en" | "cn" | "es" | "fr" | "jp" | "pt" | "pt-BR" | "de";
                hidden?: boolean | undefined;
            }>, import("zod").ZodObject<{
                href: import("zod").ZodString;
            }, "strip", import("zod").ZodTypeAny, {
                href: string;
            }, {
                href: string;
            }>>, "many">>;
            versions: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodIntersection<import("zod").ZodObject<{
                version: import("zod").ZodString;
                hidden: import("zod").ZodOptional<import("zod").ZodBoolean>;
            }, "strip", import("zod").ZodTypeAny, {
                version: string;
                hidden?: boolean | undefined;
            }, {
                version: string;
                hidden?: boolean | undefined;
            }>, import("zod").ZodObject<{
                href: import("zod").ZodString;
            }, "strip", import("zod").ZodTypeAny, {
                href: string;
            }, {
                href: string;
            }>>, "many">>;
            tabs: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodIntersection<import("zod").ZodObject<{
                tab: import("zod").ZodString;
                icon: import("zod").ZodOptional<import("zod").ZodUnion<[import("zod").ZodEffects<import("zod").ZodString, string, string>, import("zod").ZodObject<{
                    style: import("zod").ZodOptional<import("zod").ZodEnum<["brands", "duotone", "light", "regular", "sharp-duotone-solid", "sharp-light", "sharp-regular", "sharp-solid", "sharp-thin", "solid", "thin"]>>;
                    name: import("zod").ZodEffects<import("zod").ZodString, string, string>;
                }, "strip", import("zod").ZodTypeAny, {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                }, {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                }>]>>;
                hidden: import("zod").ZodOptional<import("zod").ZodBoolean>;
            }, "strip", import("zod").ZodTypeAny, {
                tab: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                tab: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>, import("zod").ZodObject<{
                href: import("zod").ZodString;
            }, "strip", import("zod").ZodTypeAny, {
                href: string;
            }, {
                href: string;
            }>>, "many">>;
            dropdowns: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodIntersection<import("zod").ZodObject<{
                dropdown: import("zod").ZodString;
                icon: import("zod").ZodOptional<import("zod").ZodUnion<[import("zod").ZodEffects<import("zod").ZodString, string, string>, import("zod").ZodObject<{
                    style: import("zod").ZodOptional<import("zod").ZodEnum<["brands", "duotone", "light", "regular", "sharp-duotone-solid", "sharp-light", "sharp-regular", "sharp-solid", "sharp-thin", "solid", "thin"]>>;
                    name: import("zod").ZodEffects<import("zod").ZodString, string, string>;
                }, "strip", import("zod").ZodTypeAny, {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                }, {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                }>]>>;
                hidden: import("zod").ZodOptional<import("zod").ZodBoolean>;
            }, "strip", import("zod").ZodTypeAny, {
                dropdown: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                dropdown: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>, import("zod").ZodObject<{
                href: import("zod").ZodString;
            }, "strip", import("zod").ZodTypeAny, {
                href: string;
            }, {
                href: string;
            }>>, "many">>;
            anchors: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodIntersection<import("zod").ZodObject<{
                anchor: import("zod").ZodString;
                icon: import("zod").ZodOptional<import("zod").ZodUnion<[import("zod").ZodEffects<import("zod").ZodString, string, string>, import("zod").ZodObject<{
                    style: import("zod").ZodOptional<import("zod").ZodEnum<["brands", "duotone", "light", "regular", "sharp-duotone-solid", "sharp-light", "sharp-regular", "sharp-solid", "sharp-thin", "solid", "thin"]>>;
                    name: import("zod").ZodEffects<import("zod").ZodString, string, string>;
                }, "strip", import("zod").ZodTypeAny, {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                }, {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                }>]>>;
                color: import("zod").ZodOptional<import("zod").ZodObject<{
                    light: import("zod").ZodOptional<import("zod").ZodString>;
                    dark: import("zod").ZodOptional<import("zod").ZodString>;
                }, "strict", import("zod").ZodTypeAny, {
                    light?: string | undefined;
                    dark?: string | undefined;
                }, {
                    light?: string | undefined;
                    dark?: string | undefined;
                }>>;
                hidden: import("zod").ZodOptional<import("zod").ZodBoolean>;
            }, "strip", import("zod").ZodTypeAny, {
                anchor: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                color?: {
                    light?: string | undefined;
                    dark?: string | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }, {
                anchor: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                color?: {
                    light?: string | undefined;
                    dark?: string | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            }>, import("zod").ZodObject<{
                href: import("zod").ZodString;
            }, "strip", import("zod").ZodTypeAny, {
                href: string;
            }, {
                href: string;
            }>>, "many">>;
        }, "strict", import("zod").ZodTypeAny, {
            languages?: ({
                language: "en" | "cn" | "es" | "fr" | "jp" | "pt" | "pt-BR" | "de";
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            versions?: ({
                version: string;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            tabs?: ({
                tab: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            dropdowns?: ({
                dropdown: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            anchors?: ({
                anchor: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                color?: {
                    light?: string | undefined;
                    dark?: string | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
        }, {
            languages?: ({
                language: "en" | "cn" | "es" | "fr" | "jp" | "pt" | "pt-BR" | "de";
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            versions?: ({
                version: string;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            tabs?: ({
                tab: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            dropdowns?: ({
                dropdown: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            anchors?: ({
                anchor: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                color?: {
                    light?: string | undefined;
                    dark?: string | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
        }>>;
    }, "strip", import("zod").ZodTypeAny, {
        global?: {
            languages?: ({
                language: "en" | "cn" | "es" | "fr" | "jp" | "pt" | "pt-BR" | "de";
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            versions?: ({
                version: string;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            tabs?: ({
                tab: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            dropdowns?: ({
                dropdown: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            anchors?: ({
                anchor: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                color?: {
                    light?: string | undefined;
                    dark?: string | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
        } | undefined;
    }, {
        global?: {
            languages?: ({
                language: "en" | "cn" | "es" | "fr" | "jp" | "pt" | "pt-BR" | "de";
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            versions?: ({
                version: string;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            tabs?: ({
                tab: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            dropdowns?: ({
                dropdown: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
            anchors?: ({
                anchor: string;
                icon?: string | {
                    name: string;
                    style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
                } | undefined;
                color?: {
                    light?: string | undefined;
                    dark?: string | undefined;
                } | undefined;
                hidden?: boolean | undefined;
            } & {
                href: string;
            })[] | undefined;
        } | undefined;
    }>>;
    footer: import("zod").ZodOptional<import("zod").ZodObject<{
        socials: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodEnum<["x", "website", "facebook", "youtube", "discord", "slack", "github", "linkedin", "instagram", "hacker-news", "medium", "telegram", "twitter"]>, import("zod").ZodString>>;
        links: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodObject<{
            header: import("zod").ZodOptional<import("zod").ZodString>;
            items: import("zod").ZodArray<import("zod").ZodObject<{
                label: import("zod").ZodString;
                href: import("zod").ZodString;
            }, "strip", import("zod").ZodTypeAny, {
                href: string;
                label: string;
            }, {
                href: string;
                label: string;
            }>, "many">;
        }, "strip", import("zod").ZodTypeAny, {
            items: {
                href: string;
                label: string;
            }[];
            header?: string | undefined;
        }, {
            items: {
                href: string;
                label: string;
            }[];
            header?: string | undefined;
        }>, "many">>;
    }, "strip", import("zod").ZodTypeAny, {
        socials?: Partial<Record<"github" | "x" | "website" | "facebook" | "youtube" | "discord" | "slack" | "linkedin" | "instagram" | "hacker-news" | "medium" | "telegram" | "twitter", string>> | undefined;
        links?: {
            items: {
                href: string;
                label: string;
            }[];
            header?: string | undefined;
        }[] | undefined;
    }, {
        socials?: Partial<Record<"github" | "x" | "website" | "facebook" | "youtube" | "discord" | "slack" | "linkedin" | "instagram" | "hacker-news" | "medium" | "telegram" | "twitter", string>> | undefined;
        links?: {
            items: {
                href: string;
                label: string;
            }[];
            header?: string | undefined;
        }[] | undefined;
    }>>;
    search: import("zod").ZodOptional<import("zod").ZodObject<{
        prompt: import("zod").ZodOptional<import("zod").ZodString>;
    }, "strip", import("zod").ZodTypeAny, {
        prompt?: string | undefined;
    }, {
        prompt?: string | undefined;
    }>>;
    seo: import("zod").ZodOptional<import("zod").ZodObject<{
        metatags: import("zod").ZodOptional<import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodString>>>;
        indexing: import("zod").ZodDefault<import("zod").ZodOptional<import("zod").ZodEnum<["navigable", "all"]>>>;
    }, "strip", import("zod").ZodTypeAny, {
        indexing: "all" | "navigable";
        metatags?: Record<string, string> | undefined;
    }, {
        metatags?: Record<string, string> | undefined;
        indexing?: "all" | "navigable" | undefined;
    }>>;
    fonts: import("zod").ZodOptional<import("zod").ZodUnion<[import("zod").ZodEffects<import("zod").ZodObject<{
        family: import("zod").ZodString;
        weight: import("zod").ZodOptional<import("zod").ZodNumber>;
        source: import("zod").ZodOptional<import("zod").ZodString>;
        format: import("zod").ZodOptional<import("zod").ZodEnum<["woff", "woff2"]>>;
    }, "strip", import("zod").ZodTypeAny, {
        family: string;
        weight?: number | undefined;
        source?: string | undefined;
        format?: "woff" | "woff2" | undefined;
    }, {
        family: string;
        weight?: number | undefined;
        source?: string | undefined;
        format?: "woff" | "woff2" | undefined;
    }>, {
        family: string;
        weight?: number | undefined;
        source?: string | undefined;
        format?: "woff" | "woff2" | undefined;
    }, {
        family: string;
        weight?: number | undefined;
        source?: string | undefined;
        format?: "woff" | "woff2" | undefined;
    }>, import("zod").ZodObject<{
        heading: import("zod").ZodOptional<import("zod").ZodEffects<import("zod").ZodObject<{
            family: import("zod").ZodString;
            weight: import("zod").ZodOptional<import("zod").ZodNumber>;
            source: import("zod").ZodOptional<import("zod").ZodString>;
            format: import("zod").ZodOptional<import("zod").ZodEnum<["woff", "woff2"]>>;
        }, "strip", import("zod").ZodTypeAny, {
            family: string;
            weight?: number | undefined;
            source?: string | undefined;
            format?: "woff" | "woff2" | undefined;
        }, {
            family: string;
            weight?: number | undefined;
            source?: string | undefined;
            format?: "woff" | "woff2" | undefined;
        }>, {
            family: string;
            weight?: number | undefined;
            source?: string | undefined;
            format?: "woff" | "woff2" | undefined;
        }, {
            family: string;
            weight?: number | undefined;
            source?: string | undefined;
            format?: "woff" | "woff2" | undefined;
        }>>;
        body: import("zod").ZodOptional<import("zod").ZodEffects<import("zod").ZodObject<{
            family: import("zod").ZodString;
            weight: import("zod").ZodOptional<import("zod").ZodNumber>;
            source: import("zod").ZodOptional<import("zod").ZodString>;
            format: import("zod").ZodOptional<import("zod").ZodEnum<["woff", "woff2"]>>;
        }, "strip", import("zod").ZodTypeAny, {
            family: string;
            weight?: number | undefined;
            source?: string | undefined;
            format?: "woff" | "woff2" | undefined;
        }, {
            family: string;
            weight?: number | undefined;
            source?: string | undefined;
            format?: "woff" | "woff2" | undefined;
        }>, {
            family: string;
            weight?: number | undefined;
            source?: string | undefined;
            format?: "woff" | "woff2" | undefined;
        }, {
            family: string;
            weight?: number | undefined;
            source?: string | undefined;
            format?: "woff" | "woff2" | undefined;
        }>>;
    }, "strict", import("zod").ZodTypeAny, {
        heading?: {
            family: string;
            weight?: number | undefined;
            source?: string | undefined;
            format?: "woff" | "woff2" | undefined;
        } | undefined;
        body?: {
            family: string;
            weight?: number | undefined;
            source?: string | undefined;
            format?: "woff" | "woff2" | undefined;
        } | undefined;
    }, {
        heading?: {
            family: string;
            weight?: number | undefined;
            source?: string | undefined;
            format?: "woff" | "woff2" | undefined;
        } | undefined;
        body?: {
            family: string;
            weight?: number | undefined;
            source?: string | undefined;
            format?: "woff" | "woff2" | undefined;
        } | undefined;
    }>]>>;
    icons: import("zod").ZodOptional<import("zod").ZodObject<{
        library: import("zod").ZodDefault<import("zod").ZodEnum<["fontawesome"]>>;
    }, "strip", import("zod").ZodTypeAny, {
        library: "fontawesome";
    }, {
        library?: "fontawesome" | undefined;
    }>>;
    styling: import("zod").ZodOptional<import("zod").ZodObject<{
        rounded: import("zod").ZodDefault<import("zod").ZodOptional<import("zod").ZodEnum<["regular", "sharp"]>>>;
        eyebrows: import("zod").ZodDefault<import("zod").ZodOptional<import("zod").ZodEnum<["section", "breadcrumbs"]>>>;
        codeblocks: import("zod").ZodDefault<import("zod").ZodOptional<import("zod").ZodEnum<["system", "dark"]>>>;
    }, "strip", import("zod").ZodTypeAny, {
        rounded: "regular" | "sharp";
        eyebrows: "section" | "breadcrumbs";
        codeblocks: "dark" | "system";
    }, {
        rounded?: "regular" | "sharp" | undefined;
        eyebrows?: "section" | "breadcrumbs" | undefined;
        codeblocks?: "dark" | "system" | undefined;
    }>>;
    redirects: import("zod").ZodOptional<import("zod").ZodEffects<import("zod").ZodArray<import("zod").ZodObject<{
        source: import("zod").ZodString;
        destination: import("zod").ZodString;
        permanent: import("zod").ZodOptional<import("zod").ZodBoolean>;
    }, "strip", import("zod").ZodTypeAny, {
        source: string;
        destination: string;
        permanent?: boolean | undefined;
    }, {
        source: string;
        destination: string;
        permanent?: boolean | undefined;
    }>, "many">, {
        source: string;
        destination: string;
        permanent?: boolean | undefined;
    }[], {
        source: string;
        destination: string;
        permanent?: boolean | undefined;
    }[]>>;
    integrations: import("zod").ZodOptional<import("zod").ZodObject<{
        amplitude: import("zod").ZodOptional<import("zod").ZodObject<{
            apiKey: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            apiKey: string;
        }, {
            apiKey: string;
        }>>;
        clearbit: import("zod").ZodOptional<import("zod").ZodObject<{
            publicApiKey: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            publicApiKey: string;
        }, {
            publicApiKey: string;
        }>>;
        fathom: import("zod").ZodOptional<import("zod").ZodObject<{
            siteId: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            siteId: string;
        }, {
            siteId: string;
        }>>;
        frontchat: import("zod").ZodOptional<import("zod").ZodObject<{
            snippetId: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            snippetId: string;
        }, {
            snippetId: string;
        }>>;
        ga4: import("zod").ZodOptional<import("zod").ZodObject<{
            measurementId: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            measurementId: string;
        }, {
            measurementId: string;
        }>>;
        gtm: import("zod").ZodOptional<import("zod").ZodObject<{
            tagId: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            tagId: string;
        }, {
            tagId: string;
        }>>;
        heap: import("zod").ZodOptional<import("zod").ZodObject<{
            appId: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            appId: string;
        }, {
            appId: string;
        }>>;
        hotjar: import("zod").ZodOptional<import("zod").ZodObject<{
            hjid: import("zod").ZodString;
            hjsv: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            hjid: string;
            hjsv: string;
        }, {
            hjid: string;
            hjsv: string;
        }>>;
        intercom: import("zod").ZodOptional<import("zod").ZodObject<{
            appId: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            appId: string;
        }, {
            appId: string;
        }>>;
        koala: import("zod").ZodOptional<import("zod").ZodObject<{
            publicApiKey: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            publicApiKey: string;
        }, {
            publicApiKey: string;
        }>>;
        logrocket: import("zod").ZodOptional<import("zod").ZodObject<{
            appId: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            appId: string;
        }, {
            appId: string;
        }>>;
        mixpanel: import("zod").ZodOptional<import("zod").ZodObject<{
            projectToken: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            projectToken: string;
        }, {
            projectToken: string;
        }>>;
        osano: import("zod").ZodOptional<import("zod").ZodObject<{
            scriptSource: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            scriptSource: string;
        }, {
            scriptSource: string;
        }>>;
        pirsch: import("zod").ZodOptional<import("zod").ZodObject<{
            id: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            id: string;
        }, {
            id: string;
        }>>;
        posthog: import("zod").ZodOptional<import("zod").ZodObject<{
            apiKey: import("zod").ZodString;
            apiHost: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            apiKey: string;
            apiHost?: string | undefined;
        }, {
            apiKey: string;
            apiHost?: string | undefined;
        }>>;
        plausible: import("zod").ZodOptional<import("zod").ZodObject<{
            domain: import("zod").ZodEffects<import("zod").ZodString, string, string>;
            server: import("zod").ZodOptional<import("zod").ZodEffects<import("zod").ZodString, string, string>>;
        }, "strip", import("zod").ZodTypeAny, {
            domain: string;
            server?: string | undefined;
        }, {
            domain: string;
            server?: string | undefined;
        }>>;
        segment: import("zod").ZodOptional<import("zod").ZodObject<{
            key: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            key: string;
        }, {
            key: string;
        }>>;
    }, "strict", import("zod").ZodTypeAny, {
        amplitude?: {
            apiKey: string;
        } | undefined;
        clearbit?: {
            publicApiKey: string;
        } | undefined;
        fathom?: {
            siteId: string;
        } | undefined;
        frontchat?: {
            snippetId: string;
        } | undefined;
        ga4?: {
            measurementId: string;
        } | undefined;
        gtm?: {
            tagId: string;
        } | undefined;
        heap?: {
            appId: string;
        } | undefined;
        hotjar?: {
            hjid: string;
            hjsv: string;
        } | undefined;
        intercom?: {
            appId: string;
        } | undefined;
        koala?: {
            publicApiKey: string;
        } | undefined;
        logrocket?: {
            appId: string;
        } | undefined;
        mixpanel?: {
            projectToken: string;
        } | undefined;
        osano?: {
            scriptSource: string;
        } | undefined;
        pirsch?: {
            id: string;
        } | undefined;
        posthog?: {
            apiKey: string;
            apiHost?: string | undefined;
        } | undefined;
        plausible?: {
            domain: string;
            server?: string | undefined;
        } | undefined;
        segment?: {
            key: string;
        } | undefined;
    }, {
        amplitude?: {
            apiKey: string;
        } | undefined;
        clearbit?: {
            publicApiKey: string;
        } | undefined;
        fathom?: {
            siteId: string;
        } | undefined;
        frontchat?: {
            snippetId: string;
        } | undefined;
        ga4?: {
            measurementId: string;
        } | undefined;
        gtm?: {
            tagId: string;
        } | undefined;
        heap?: {
            appId: string;
        } | undefined;
        hotjar?: {
            hjid: string;
            hjsv: string;
        } | undefined;
        intercom?: {
            appId: string;
        } | undefined;
        koala?: {
            publicApiKey: string;
        } | undefined;
        logrocket?: {
            appId: string;
        } | undefined;
        mixpanel?: {
            projectToken: string;
        } | undefined;
        osano?: {
            scriptSource: string;
        } | undefined;
        pirsch?: {
            id: string;
        } | undefined;
        posthog?: {
            apiKey: string;
            apiHost?: string | undefined;
        } | undefined;
        plausible?: {
            domain: string;
            server?: string | undefined;
        } | undefined;
        segment?: {
            key: string;
        } | undefined;
    }>>;
};
