import { isGroup } from '../navigation/index.js';
import { optionallyRemoveLeadingSlash } from '../optionallyRemoveLeadingSlash.js';
/**
 * Assumes page hrefs in navWithPageContext have a leading / but config page paths do not.
 * Outputted dictionary will NOT have a leading / in the dictionary keys.
 */
export function generatePathToVersionDict(decoratedNav) {
    const pathToVersionDict = new Map();
    decoratedNav.forEach((group) => generatePathToVersionDictRecursive(pathToVersionDict, group));
    return pathToVersionDict;
}
function generatePathToVersionDictRecursive(pathToVersionDict, entry, nearestVersion) {
    var _a;
    if (isGroup(entry)) {
        entry.pages.forEach((subEntry) => {
            var _a;
            return generatePathToVersionDictRecursive(pathToVersionDict, subEntry, (_a = entry.version) !== null && _a !== void 0 ? _a : nearestVersion);
        });
    }
    else {
        const finalVersion = (_a = entry.version) !== null && _a !== void 0 ? _a : nearestVersion;
        pathToVersionDict.set(optionallyRemoveLeadingSlash(entry.href), finalVersion);
    }
}
