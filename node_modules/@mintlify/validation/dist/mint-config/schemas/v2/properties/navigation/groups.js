import { z } from 'zod';
import { hiddenSchema } from '../reusable/hidden.js';
import { iconSchema } from '../reusable/icon.js';
import { openApiSchema } from '../reusable/openapi.js';
import { pageSchema } from '../reusable/page.js';
import { pagesSchema } from './pages.js';
export const groupSchema = z
    .object({
    group: z.string().nonempty().describe('The name of the group'),
    icon: iconSchema.optional(),
    hidden: hiddenSchema.optional(),
    root: pageSchema.optional(),
})
    .and(z.union([z.object({ openapi: openApiSchema }), z.lazy(() => z.object({ pages: pagesSchema }))]))
    .describe('Organizing by groups');
export const groupsSchema = z.array(groupSchema);
