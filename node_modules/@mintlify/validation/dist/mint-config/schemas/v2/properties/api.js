import { z } from 'zod';
export const apiSchema = z
    .object({
    playground: z
        .object({
        display: z
            .enum(['interactive', 'simple', 'none'])
            .optional()
            .default('interactive')
            .describe('The display mode of the API playground'),
        proxy: z
            .boolean()
            .optional()
            .default(false)
            .describe('Whether to pass API requests through a proxy server'),
    })
        .optional()
        .describe('Configurations for the API playground'),
    examples: z
        .object({
        languages: z
            .array(z.string())
            .optional()
            .describe('Example languages for the autogenerated API snippets'),
    })
        .optional()
        .describe('Configurations for the autogenerated API examples'),
    mdx: z
        .object({
        auth: z
            .enum(['bearer', 'basic', 'key', 'cobo'])
            .optional()
            .describe('Authentication method for the API'),
        base: z
            .union([z.string().url(), z.array(z.string().url())])
            .optional()
            .describe('Base URL(s) for the API'),
    })
        .optional()
        .describe('Configurations for API pages generated from MDX files'),
})
    .describe('API reference configuration and playground settings');
