import { z } from 'zod';
export declare const apiSchema: z.ZodObject<{
    playground: z.ZodOptional<z.ZodObject<{
        display: z.ZodDefault<z.ZodOptional<z.ZodEnum<["interactive", "simple", "none"]>>>;
        proxy: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    }, "strip", z.ZodTypeAny, {
        display: "simple" | "none" | "interactive";
        proxy: boolean;
    }, {
        display?: "simple" | "none" | "interactive" | undefined;
        proxy?: boolean | undefined;
    }>>;
    examples: z.ZodOptional<z.ZodObject<{
        languages: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        languages?: string[] | undefined;
    }, {
        languages?: string[] | undefined;
    }>>;
    mdx: z.ZodOptional<z.ZodObject<{
        auth: z.ZodOptional<z.ZodEnum<["bearer", "basic", "key", "cobo"]>>;
        base: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>>;
    }, "strip", z.ZodTypeAny, {
        auth?: "key" | "bearer" | "basic" | "cobo" | undefined;
        base?: string | string[] | undefined;
    }, {
        auth?: "key" | "bearer" | "basic" | "cobo" | undefined;
        base?: string | string[] | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    playground?: {
        display: "simple" | "none" | "interactive";
        proxy: boolean;
    } | undefined;
    examples?: {
        languages?: string[] | undefined;
    } | undefined;
    mdx?: {
        auth?: "key" | "bearer" | "basic" | "cobo" | undefined;
        base?: string | string[] | undefined;
    } | undefined;
}, {
    playground?: {
        display?: "simple" | "none" | "interactive" | undefined;
        proxy?: boolean | undefined;
    } | undefined;
    examples?: {
        languages?: string[] | undefined;
    } | undefined;
    mdx?: {
        auth?: "key" | "bearer" | "basic" | "cobo" | undefined;
        base?: string | string[] | undefined;
    } | undefined;
}>;
