import { z } from 'zod';
export declare const tabSchema: z.ZodType;
export declare const nonRecursiveTabSchema: z.ZodIntersection<z.ZodObject<{
    tab: z.ZodString;
    icon: z.ZodOptional<z.ZodUnion<[z.ZodEffects<z.ZodString, string, string>, z.ZodObject<{
        style: z.ZodOptional<z.ZodEnum<["brands", "duotone", "light", "regular", "sharp-duotone-solid", "sharp-light", "sharp-regular", "sharp-solid", "sharp-thin", "solid", "thin"]>>;
        name: z.ZodEffects<z.ZodString, string, string>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
    }, {
        name: string;
        style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
    }>]>>;
    hidden: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    tab: string;
    icon?: string | {
        name: string;
        style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
    } | undefined;
    hidden?: boolean | undefined;
}, {
    tab: string;
    icon?: string | {
        name: string;
        style?: "brands" | "duotone" | "light" | "regular" | "sharp-duotone-solid" | "sharp-light" | "sharp-regular" | "sharp-solid" | "sharp-thin" | "solid" | "thin" | undefined;
    } | undefined;
    hidden?: boolean | undefined;
}>, z.ZodObject<{
    href: z.ZodString;
}, "strip", z.ZodTypeAny, {
    href: string;
}, {
    href: string;
}>>;
export declare const tabsSchema: z.ZodArray<z.ZodType<any, z.ZodTypeDef, any>, "many">;
export type TabsConfig = z.infer<typeof tabsSchema>;
export type TabConfig = z.infer<typeof tabSchema>;
