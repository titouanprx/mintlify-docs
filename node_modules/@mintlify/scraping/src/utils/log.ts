export const colors = {
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m',
  default: '\x1b[0m',
} as const;

const noColors = {
  red: '',
  green: '',
  yellow: '',
  blue: '',
  magenta: '',
  cyan: '',
  default: '',
} as const;

const statuses = ['success', 'failure', 'error', 'warn', 'warning', 'info'] as const;

export const activeColors = process.stdout.isTTY ? colors : noColors;

export type Status = (typeof statuses)[number];
export type Color = keyof typeof colors;

export const checkIcon = '✔ ' as const;
export const xIcon = '✘ ' as const;
export const infoIcon = 'ⓘ ' as const;
export const warningIcon = '⚠ ' as const;

export function log(message: string | unknown, statusOrColor?: Status): void {
  let color: (typeof activeColors)[Color] = activeColors.blue;
  let statusMsg: string = 'INFO   ';
  let icon: string = infoIcon;

  const msg = typeof message === 'string' ? message.toLowerCase() : '';
  if (!statusOrColor) {
    statusOrColor =
      msg.includes('fail') ||
      msg.includes('error') ||
      msg.includes('could not') ||
      msg.includes("couldn't") ||
      msg.includes('did not') ||
      msg.includes('invalid') ||
      msg.includes("didn't")
        ? 'error'
        : msg.includes('success') ||
            msg.includes('downloaded') ||
            msg.includes('written') ||
            msg.includes('added')
          ? 'success'
          : msg.includes('warn')
            ? 'warn'
            : undefined;
  }

  switch (statusOrColor) {
    case undefined:
    case 'info':
      break;

    case 'success':
      color = activeColors.green;
      statusMsg = 'SUCCESS';
      icon = checkIcon;
      break;

    case 'warn':
    case 'warning':
      color = activeColors.yellow;
      statusMsg = 'WARNING';
      icon = warningIcon;
      break;

    case 'failure':
    case 'error':
      color = activeColors.red;
      statusMsg = 'ERROR  ';
      icon = xIcon;
      break;
  }

  console.log(
    `${color}${icon} ${statusMsg}${activeColors.default} - ${
      typeof message === 'string' ||
      typeof message === 'bigint' ||
      typeof message === 'number' ||
      typeof message === 'boolean'
        ? message
        : JSON.stringify(message, undefined, 2)
    }`
  );
}
